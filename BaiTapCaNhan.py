# -*- coding: utf-8 -*-
"""Untitled31.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_ZKlkPrLY_zDw8mAwFSVq2nhH98IcZlK
"""

from google.colab import drive
drive.mount('/content/gdrive')

x = 3
print(type(x))

# Commented out IPython magic to ensure Python compatibility.
# %cd '/content/gdrive/My Drive/Deep-learning'

print(x)
print(x + 1)
print(x - 1)
print(x * 2)
print(x ** 2)
x += 1
print(x)
x *= 2
print(x)
y = 2.5
print(type(y))
print(y, y + 1, y * 2, y ** 2)

t = True
f = False
print(type(t))
print(t and f)
print(t or f)
print(not t)
print(t != f)

hello = 'hello'
world = "world"
print(hello)
print(len(hello))
hw = hello + ' ' + world
print(hw)
hw12 = '{} {} {}'.format(hello, world, 12)
print(hw12)
s = "hello"
print(s.capitalize())
print(s.upper())
print(s.replace('l', '(ell)'))
print(' world '.strip())

print('Dao Quang Huy'.split())
print(' '.join(['Dao', 'Quang', 'Huy']))

xs = [3, 1, 2]
print(xs, xs[2])
print(xs[-1])
xs[2] = 'foo'
print(xs)
xs.append('bar')
print(xs)
x = xs.pop()
print(x, xs)

nums = list(range(5))
print(nums)
print(nums[2:4])
print(nums[2:])
print(nums[:2])
print(nums[:])
print(nums[:-1])
nums[2:4] = [8, 9]
print(nums)

animals = ['cat', 'dog', 'monkey']
for animal in animals:
  print('%s' % (animal))
for idx, animal in enumerate(animals):
  print('#%d: %s' % (idx + 1, animal))

d = {'cat': 'cute', 'dog': 'furry'}
print(d['cat'])
print('cat' in d)
d['fish'] = 'wet'
print(d['fish'])
del d['fish']

d = {'person': 2, 'cat': 4, 'spider': 8}
for animal in d:
  print('A %s has %d legs' % (animal, d[animal]))
for legs in d.values():
  print('%d legs' % (legs))
for animal, legs in d.items():
  print('A %s has %d legs' % (animal, legs))

def sign(x):
  if x > 0:
    return 'positive'
  elif x < 0:
    return 'negative'
  else:
    return 'zero'
for x in [-1, 0, 1]:
  print(sign(x))

import numpy as np
a = np.array([1, 2, 3])
print(type(a))
print(a.shape)
print(a[0], a[1], a[2])
a[0] = 5
print(a)
b = np.array([[1,2,3],[4,5,6]])
print(b.shape)
print(b[0, 0], b[0, 1], b[1, 0])

import numpy as np
a = np.zeros((2,2))
print(a)
b = np.ones((1,2))
print(b)
c = np.full((2,2), 7)
print(c)
d = np.eye(2)
print(d)
e = np.random.random((2,2))
print(e)

import numpy as np
a = np.array([[1,2,3,4], [5,6,7,8], [9,10,11,12]])
b = a[:2, 1:3]
print(a[0, 1])
a[0, 1] = 7
print(a[0, 1])

import numpy as np
a = np.array([[1,2,3,4], [5,6,7,8], [9,10,11,12]])
row_r1 = a[1, :]
row_r2 = a[1:2, :]
print(row_r1, row_r1.shape)
print(row_r2, row_r2.shape)

x = np.array([[2,5],[3,4]], dtype=np.float64)
y = np.array([[5,6],[7,8]], dtype=np.float64)
print(x + y)
print(np.add(x, y))
print(x - y)
print(np.subtract(x, y))
print(x * y)
print(np.multiply(x, y))
print(x / y)
print(np.divide(x, y))
print(np.sqrt(x))

x = np.array([[1,2],[3,4]])
y = np.array([[5,6],[7,8]])
v = np.array([9,10])
w = np.array([11, 12])
print(v.dot(w))
print(np.dot(v, w))
print(x.dot(y))
print(np.dot(x, y))

x = np.array([[1,2],[3,4]])
print(np.sum(x))
print(np.sum(x, axis=0))
print(np.sum(x, axis=1))

x = np.array([[1,2,3], [4,5,6], [7,8,9], [10, 11, 12]])
v = np.array([1, 0, 1])
y = np.empty_like(x)
for i in range(4):
  y[i, :] = x[i, :] + v
print(y)
print(x + v)

import matplotlib.pyplot as plt
x = np.arange(2, 10 * np.pi, 0.5)
y = np.sin(x)
plt.plot(x, y)
plt.show()

x = np.arange(2, 6 , 0.2)
y_sin = np.sin(x)
y_cos = np.cos(x)
plt.plot(x, y_sin)
plt.plot(x, y_cos)
plt.xlabel('x axis label')
plt.ylabel('y axis label')
plt.title('Sine and Cosine')
plt.legend(['Sine', 'Cosine'])
plt.show()

x = np.arange(0, 3 * np.pi, 0.1)
y_sin = np.sin(x)
y_cos = np.cos(x)
plt.subplot(2, 1, 1)
plt.plot(x, y_sin)
plt.title('Sine')
plt.subplot(2, 1, 2)
plt.plot(x, y_cos)
plt.title('Cosine')
plt.show()